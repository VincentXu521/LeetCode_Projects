#include<vector>
using namespace std;

/*
给定一个数组 nums 和一个值 val，你需要原地移除所有数值等于 val 的元素，返回移除后数组的新长度。
不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。

元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。

示例 1:
给定 nums = [3,2,2,3], val = 3,
函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。

示例 2:
给定 nums = [0,1,2,2,3,0,4,2], val = 2,
函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。

说明:
1. 为什么返回数值是整数，但输出的答案是数组呢?
2. 请注意，输入数组是以“引用”方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。
*/


// ------------------------------ Mine: 4ms... 100%..----------------------------------------
class Solution {
public:
	int removeElement(vector<int>& nums, int val) {
		int res = 0;
		for (int i = 0; i < nums.size(); i++) {
			if (nums[i] != val) {
				nums[res++] = nums[i];
			}
		}
		return res;
	}
};
